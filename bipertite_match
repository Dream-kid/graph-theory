//bipertite_match
#include <bits/stdc++.h>
using namespace std;
typedef int ll;
#define inf 1000000
char arr[310][310];
ll temp1[310][310];
ll temp2[310][310];
ll f;
ll n,m;
vector<ll> g[310000];
ll lt[310000];
ll rt[310000];
bool visited[310000];
bool dfs(ll u)
{
    if(visited[u])
        return false;
    visited[u]=true;
    for(ll i=0; i<g[u].size(); i++)
    {
        ll v=g[u][i];
        if(rt[v]==-1)
        {
            rt[v]=u;
            lt[u]=v;
            return true;
        }
    }
    for(ll i=0; i<g[u].size(); i++)
    {
        ll v=g[u][i];
        if(dfs(rt[v]))
        {
            rt[v]=u;
            lt[u]=v;
            return true;
        }
    }
    return false;
}
ll match(ll n)
{
    memset(lt,-1,sizeof lt);
    memset(rt,-1,sizeof rt);
    bool done=false;
    while(!done)
    {
        done=true;
        memset(visited,false,sizeof visited);
        for(ll i=1; i<=n; i++)
        {
            if(lt[i]==-1 and dfs(i))
            {
                done=false;
            }
        }
    }
    ll ret=0;
    for(ll i=1; i<=n; i++)
        ret+=(int)lt[i]!=-1;
    return ret;
}
int main()
{
    ll ts;
    cin>>ts;
    for(ll t=1; t<=ts; t++)
    {
        ll row,collum;
        cin>>row>>collum;
        for(ll i=0; i<=90010; i++)
            g[i].clear();
        memset(temp1,-1,sizeof temp1);
        memset(temp2,-1,sizeof temp2);
        for(ll i=1; i<=row; i++)
        {
            for(ll j=1; j<=collum; j++)
            {
                cin>>arr[i][j];
            }
        }
        ll val1=1;
        ll val2=1;
        for(ll i=1; i<=row; i++)
        {
            for(ll j=1; j<=collum; j++)
            {
                if(arr[i][j]!='A')
                {
                    if(temp1[i-1][j]==-1)
                    {
                        temp1[i][j]=val1++;
                    }
                    else
                        temp1[i][j]=temp1[i-1][j];
                    if(temp2[i][j-1]==-1)
                    {
                        temp2[i][j]=val2++;
                    }
                    else
                        temp2[i][j]=temp2[i][j-1];
                }
            }
        }
        for(ll i=1; i<=row; i++)
        {
            for(ll j=1; j<=collum; j++)
            {
                if(arr[i][j]!='H')
                    continue;
                ll a=temp1[i][j];
                ll b=temp2[i][j];
                g[a].push_back(b);
            }
        }
        cout<<match(90002)<<endl;
    }

}
